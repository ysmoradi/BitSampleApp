{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBA6DA;AA7DA,CAAC;;;;;gBAES,eAAe,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;gBACnE,SAAS,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;gBACvD,gBAAgB,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;gBACrE,eAAe,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,yBAAyB,CAAC,SAAS,EAAE,gBAAgB,EAAE,eAAe,CAAC,CAAC;gBAClH,WAAW,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;gBAEjE,qBAAM,eAAe,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE,oBAAoB,EAAE,QAAQ,CAAC,EAAA;;gBAA1F,SAA0F,CAAC;gBAE3E,qBAAM,eAAe,CAAC,UAAU,CAAmB,WAAW,CAAC,EAAA;;gBAAzE,OAAO,GAAG,SAA+D;gBAGpE,qBAAM,OAAO,CAAC,UAAU,CAAC,kBAAkB,EAAE;yBACnD,eAAe,EAAE;yBACjB,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAApB,CAAoB,CAAC;yBACjC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,EAAJ,CAAI,CAAC;yBAClB,IAAI,CAAC,CAAC,CAAC;yBACP,IAAI,CAAC,CAAC,CAAC;yBACP,OAAO,EAAE,EAAA;;gBANR,EAAE,GAAG,SAMG;gBAEd,OAAO,CAAC,UAAU,CAAC,kBAAkB,EAAE;qBAClC,MAAM,CAAC,UAAC,CAAC,EAAE,GAAG,IAAK,OAAA,CAAC,CAAC,IAAI,IAAI,GAAG,EAAb,CAAa,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,gCAAgC,EAAE,CAAC;qBAChG,OAAO,EAAE,CAAC;gBAEf,OAAO,CAAC,UAAU,CAAC,kBAAkB,EAAE;qBAClC,MAAM,CAAC,2BAA2B,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,gCAAgC,EAAE,CAAC;qBAClG,OAAO,EAAE,CAAC;;;;gBAIX,qBAAM,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAA;;gBAAjE,SAAiE,CAAC;;;;gBAGlE,iBAAiB;gBACjB,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,OAAO,CAAC,CAAC;;;gBAIrB,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3G,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3I,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACjJ,qBAAM,OAAO,CAAC,WAAW,EAAE,EAAA;;gBAA3B,SAA2B,CAAC;gBAGb,qBAAM,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,oBAAoB,IAAI,IAAI,EAA9B,CAA8B,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAA;;gBAA5H,MAAM,GAAG,SAAmH;gBAG3G,qBAAM,eAAe,CAAC,UAAU,CAAmB,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAA;;gBAArG,cAAc,GAAG,SAAoF;gBAE3G,OAAO;gBACP,WAAW,CAAC,IAAI,CAAC,cAAM,OAAA,eAAe,CAAC,UAAU,CAAmB,WAAW,CAAC,EAAzD,CAAyD,EAAE,cAAM,OAAA,eAAe,CAAC,UAAU,CAAmB,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAA9E,CAA8E,CAAC,CAAC;gBACxK,WAAW,CAAC,kBAAkB,CAAmB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC;gBAE9G,qBAAM,WAAW,CAAC,WAAW,EAAE,EAAA;;gBAA/B,SAA+B,CAAC;gBAEpB,qBAAM,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,aAAa,IAAI,CAAC,EAApB,CAAoB,CAAC,CAAC,OAAO,EAAE,EAAA;;gBAAjF,GAAG,GAAG,SAA2E;gBAEjF,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAU,YAAY,CAAC,CAAC;;;;KAExE,CAAC,EAAE,CAAC","sourcesContent":["(async () => {\n\n    const securityService = new Bit.Implementations.DefaultSecurityService();\n    const guidUtils = new Bit.Implementations.DefaultGuidUtils();\n    const metadataProvider = new Bit.Implementations.DefaultMetadataProvider();\n    const contextProvider = new Bit.Implementations.EntityContextProviderBase(guidUtils, metadataProvider, securityService);\n    const syncService = new Bit.Implementations.DefaultSyncService();\n\n    await securityService.loginWithCredentials(\"Test\", \"Test\", \"SampleApp-ResOwner\", \"secret\");\n\n    const context = await contextProvider.getContext<SampleAppContext>(\"SampleApp\");\n\n    // function\n    const t1 = await context.categories.getEmptyCategories()\n        .withInlineCount()\n        .filter(c => c.Name.includes(\"C\"))\n        .orderBy(c => c.Id)\n        .take(1)\n        .skip(1)\n        .toArray();\n\n    context.categories.getEmptyCategories()\n        .filter((c, arg) => c.Name == arg, { arg: new Date().getDay() /*Some variable for example...*/ })\n        .toArray();\n\n    context.categories.getEmptyCategories()\n        .filter(`(c, arg) => c.Name == arg`, { arg: new Date().getDay() /*Some variable for example...*/ })\n        .toArray();\n\n    // action\n    try {\n        await context.products.deactivateProductById(guidUtils.newGuid());\n    }\n    catch (e) {\n        // error messages\n        console.log(e.message);\n    }\n\n    // batch save\n    const category = context.categories.add(new SampleAppModel.CategoryDto({ Id: guidUtils.newGuid(), Name: \"C1\" }));\n    const p1 = context.products.add(new SampleAppModel.ProductDto({ Id: guidUtils.newGuid(), Name: \"P1\", CategoryId: category.Id, IsActive: true }));\n    const p2 = context.products.add(new SampleAppModel.ProductDto({ Id: guidUtils.newGuid(), Name: \"P1\", CategoryId: category.Id, IsActive: true }));\n    await context.saveChanges();\n\n    // batch read\n    const result = await context.batchExecuteQuery([context.categories.filter(c => c.AllProductsAreActive == true), context.products]);\n\n    // offline context:\n    const offlineContext = await contextProvider.getContext<SampleAppContext>(\"SampleApp\", { isOffline: true });\n\n    // sync\n    syncService.init(() => contextProvider.getContext<SampleAppContext>(\"SampleApp\"), () => contextProvider.getContext<SampleAppContext>(\"SampleApp\", { isOffline: true }));\n    syncService.addEntitySetConfig<SampleAppContext>({ name: \"categories\", dtoType: SampleAppModel.CategoryDto });\n\n    await syncService.syncContext();\n\n    const aaa = await offlineContext.categories.filter(c => c.ProductsCount == 0).toArray();\n\n    const someConfig = clientAppProfile.getConfig<boolean>(\"SomeConfig\");\n\n})();\n"]}