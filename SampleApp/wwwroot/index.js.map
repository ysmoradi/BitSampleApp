{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["(async () => {\r\n\r\n    const guidUtils = new Bit.Implementations.DefaultGuidUtils();\r\n    const metadataProvider = new Bit.Implementations.DefaultMetadataProvider();\r\n    const contextProvider = new Bit.Implementations.EntityContextProviderBase(guidUtils, metadataProvider);\r\n    const syncService = new Bit.Implementations.DefaultSyncService();\r\n\r\n    const context = await contextProvider.getContext<SampleAppContext>(\"SampleApp\");\r\n\r\n    // function\r\n    const t1 = await context.categories.getEmptyCategories()\r\n        .withInlineCount()\r\n        .filter(c => c.Name.includes(\"C\"))\r\n        .orderBy(c => c.Id)\r\n        .take(1)\r\n        .skip(1)\r\n        .toArray();\r\n\r\n    // action\r\n    try {\r\n        await context.products.deactivateProductById(guidUtils.newGuid());\r\n    }\r\n    catch (e) {\r\n        // error messages\r\n        console.log(e.message);\r\n    }\r\n\r\n    // batch save\r\n    const category = context.categories.add(new SampleAppModel.CategoryDto({ Id: guidUtils.newGuid(), Name: \"C1\" }));\r\n    const p1 = context.products.add(new SampleAppModel.ProductDto({ Id: guidUtils.newGuid(), Name: \"P1\", CategoryId: category.Id, IsActive: true }));\r\n    const p2 = context.products.add(new SampleAppModel.ProductDto({ Id: guidUtils.newGuid(), Name: \"P1\", CategoryId: category.Id, IsActive: true }));\r\n    await context.saveChanges();\r\n\r\n    // batch read\r\n    const result = await context.batchExecuteQuery([context.categories.filter(c => c.AllProductsAreActive == true), context.products]);\r\n\r\n    // offline context:\r\n    const offlineContext = await contextProvider.getContext<SampleAppContext>(\"SampleApp\", { isOffline: true });\r\n\r\n    // sync\r\n    syncService.init(() => contextProvider.getContext<SampleAppContext>(\"SampleApp\"), () => contextProvider.getContext<SampleAppContext>(\"SampleApp\", { isOffline: true }));\r\n    syncService.addEntitySetConfig<SampleAppContext>(offlineContext.categories);\r\n\r\n    await syncService.syncContext();\r\n\r\n    const aaa = await offlineContext.categories.filter(c => c.ProductsCount == 0).toArray();\r\n\r\n})();"]}